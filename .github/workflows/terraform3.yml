name: 'Tform workflow for FinChoice'

on:
# push:
# branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

env: 
  AWS_REGION: ${{ secrets.AWS_REGION }}       
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_CREDS_DIRECTORY: ~/.aws

jobs:
  terraform:
    name: 'Terraform'
    runs-on: self-hosted
  
    
    defaults:
      run:
        shell: bash
       
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      

  log-into-aws:
    name: 'log into aws'
    runs-on: self-hosted
    steps:
    - name: Log Into AWS
      run: |  
          rm -rf .terraform
          if [ -d "$AWS_CREDS_DIRECTORY" ]; then sudo rm -Rf $AWS_CREDS_DIRECTORY; fi       
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_REGION

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
  tf-init-plan:
    name: 'Initialize, validate and plan'
    runs-on: self-hosted
    environment: init
    needs: ["log-into-aws"]
    steps:
    - name: terraform init
      run: terraform init -input=false
          
         
    - name: Terraform Lint
      run:  |
          terraform fmt --recursive
          terraform validate

    # - name: Test with Checkov
    #   id: checkov
    #   uses: bridgecrewio/checkov-action@master
    #   with:
    #     directory: /
    #     framework: terraform 

    - name: Terraform Plan
      run: terraform plan -input=false
      
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

  terraform-apply:
    name: terraform apply
    runs-on: self-hosted
    environment: apply
    needs: ["tf-init-plan", "log-into-aws"]
    steps:
    - name: terraform init
      run: terraform init -input=false
          
         
    - name: Terraform Lint
      run:  |
          terraform fmt --recursive
          terraform validate

    # - name: Test with Checkov
    #   id: checkov
    #   uses: bridgecrewio/checkov-action@master
    #   with:
    #     directory: /
    #     framework: terraform 

    - name: Terraform Plan
      run: terraform plan -input=false
      
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
#     if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform destroy -auto-approve -input=false

  